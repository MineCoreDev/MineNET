<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="server.config.address" xml:space="preserve">
    <value>サーバーのIPアドレス</value>
  </data>
  <data name="server.config.maxPlayer" xml:space="preserve">
    <value>サーバーの最大接続台数</value>
  </data>
  <data name="server.config.port" xml:space="preserve">
    <value>サーバーのポート番号</value>
  </data>
  <data name="server.config.serverMotd" xml:space="preserve">
    <value>サーバーの説明</value>
  </data>
  <data name="server.error.stop" xml:space="preserve">
    <value>リカバリー不可能なエラーが発生しました。</value>
  </data>
  <data name="server.name" xml:space="preserve">
    <value>MineNET</value>
  </data>
  <data name="server.network.dataPacket.notHandle" xml:space="preserve">
    <value>ハンドルされていないデータパケット {0} を受信しました。</value>
  </data>
  <data name="server.network.minecraft.notHandle" xml:space="preserve">
    <value>ハンドルされていないMinecraftパケット {0} を受信しました。</value>
  </data>
  <data name="server.network.raknet.notHandle" xml:space="preserve">
    <value>ハンドルされていないRakNetパケット {0} を受信しました。</value>
  </data>
  <data name="server.network.raknet.sessionClose" xml:space="preserve">
    <value>セッションが終了しました。&lt;{0}&gt;</value>
  </data>
  <data name="server.network.raknet.sessionCreate" xml:space="preserve">
    <value>セッションが作成されました。 &lt;{0}&gt; mtuSize: {1}</value>
  </data>
  <data name="server.network.raknet.sessionCreated" xml:space="preserve">
    <value>{0} は既にセッションが作成されています。</value>
  </data>
  <data name="server.network.raknet.sessionDisconnect" xml:space="preserve">
    <value>セッション &lt;{0}&gt; は {1} で終了しました。</value>
  </data>
  <data name="server.network.raknet.sessionNotCreated" xml:space="preserve">
    <value>{0} はセッションが作成されていません。</value>
  </data>
  <data name="server.network.start" xml:space="preserve">
    <value>ポート番号 {0} でネットワークリスナーを開始しています。</value>
  </data>
  <data name="server.network.start.done" xml:space="preserve">
    <value>ネットワークリスナーを開始しました。 起動経過時間: {0}</value>
  </data>
  <data name="server.network.stop" xml:space="preserve">
    <value>ネットワークリスナーを終了しました。 終了経過時間: {0}</value>
  </data>
  <data name="server.plugin.disable_library" xml:space="preserve">
    <value>[{0}] ライブラリ {0} を無効にしました。</value>
  </data>
  <data name="server.plugin.disable_package" xml:space="preserve">
    <value>[{0}] パッケージ {0} を無効にしました。</value>
  </data>
  <data name="server.plugin.disable_plugin" xml:space="preserve">
    <value>[{0}] プラグイン {0} を無効にしました。</value>
  </data>
  <data name="server.plugin.enable_library" xml:space="preserve">
    <value>[{0}] ライブラリ {0} を有効にしました。</value>
  </data>
  <data name="server.plugin.enable_package" xml:space="preserve">
    <value>[{0}] パッケージ {0} を有効にしました。</value>
  </data>
  <data name="server.plugin.enable_plugin" xml:space="preserve">
    <value>[{0}] プラグイン {0} を有効にしました。</value>
  </data>
  <data name="server.plugin.load_library" xml:space="preserve">
    <value>[{0}] ライブラリ {0} を読み込んでいます。</value>
  </data>
  <data name="server.plugin.load_package" xml:space="preserve">
    <value>[{0}] パッケージ {0} を読み込んでいます。</value>
  </data>
  <data name="server.plugin.load_plugin" xml:space="preserve">
    <value>[{0}] プラグイン {0} を読み込んでいます。</value>
  </data>
  <data name="server.start" xml:space="preserve">
    <value>MineNET サーバーを開始しています。</value>
  </data>
  <data name="server.start.done" xml:space="preserve">
    <value>サーバーが開始しました。</value>
  </data>
  <data name="server.start.done2" xml:space="preserve">
    <value>helpでコマンド確認して下さい。 起動経過時間: {0}</value>
  </data>
  <data name="server.stoped" xml:space="preserve">
    <value>サーバーは終了しました。 終了経過時間: {0}</value>
  </data>
  <data name="server.stoping" xml:space="preserve">
    <value>サーバーを終了しています。</value>
  </data>
</root>